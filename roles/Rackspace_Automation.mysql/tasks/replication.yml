---
- name: check for the mysql_replication_password variable
  fail: msg="mysql_replication_password has not been defined."
  when: mysql_replication_password is not defined

- name: check for the mysql_master_host variable
  fail: msg="mysql_master_host has not been defined."
  when: mysql_master_host is not defined

- name: set slave role based on group
  set_fact: mysql_replication_role="slave"
  when: "'mysql_slaves' in group_names"

- name: set master role based on group
  set_fact: mysql_replication_role="master"
  when: "'mysql_masters' in group_names"

- name: setup replication user
  mysql_user:
    name: "{{ mysql_replication_user }}"
    password: "{{ mysql_replication_password }}"
    priv: "*.*:REPLICATION SLAVE"
    host: "%"
    state: present
  notify: restart mysql
  when: mysql_replication_role == "master"

- name: get master status for slave config
  mysql_replication: mode=getmaster
  delegate_to: "{{ mysql_master_host }}"
  register: replication_status
  when: mysql_replication_role == "slave"

- name: stop slave for new configuration
  mysql_replication:
    mode: stopslave
  when: mysql_replication_role == "slave" and mysql_configure_slave

- name: configure slaves to replicate with master
  mysql_replication:
    mode: changemaster
    master_host: "{{ mysql_master_host }}"
    master_user: "{{ mysql_replication_user }}"
    master_password: "{{ mysql_replication_password }}"
    master_log_file: "{{ replication_status.File }}"
    master_log_pos: "{{ replication_status.Position }}"
  notify: restart mysql
  when: mysql_replication_role == "slave" and mysql_configure_slave

- name: start slave
  mysql_replication: mode=startslave
  when: mysql_replication_role == "slave"
